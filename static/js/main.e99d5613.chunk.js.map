{"version":3,"sources":["actions/types.js","reducers/xrays.js","reducers/notifications.js","reducers/index.js","store/index.js","context.js","theme.js","components/NavDrawer/DrawerItem.jsx","components/NavDrawer/index.jsx","actions/notifications.js","components/Notifier/index.jsx","components/Header/index.jsx","components/PredictionChart/index.jsx","components/CarouselCard/index.jsx","components/PredictionLog/index.jsx","components/HomeCard/index.jsx","components/CarouselCard/CarouselCardItem.jsx","components/ActionCard/index.jsx","components/Pages/HomePage.jsx","components/Upload/index.jsx","components/PredictionCard/StatisticsPopper.jsx","components/PredictionCard/ImageCard.jsx","components/PredictionCard/index.jsx","api/index.js","actions/xrays.js","components/HideOnScroll/index.jsx","components/Pages/PredictionPage.jsx","components/Pages/SettingsPage.jsx","components/App/index.jsx","reportWebVitals.js","index.js"],"names":["ADD_FILE","DELETE_FILE","DELETE_ALL_FILE","UPDATE_FILE","ENQUEUE_SNACKBAR","CLOSE_SNACKBAR","REMOVE_SNACKBAR","initialState","files","labels","notifications","combineReducers","xrays","state","action","type","payload","filter","file","id","map","key","notification","dismissAll","dismissed","createStore","rootReducer","applyMiddleware","thunk","UIContext","React","createContext","defaultTheme","createMuiTheme","theme","typography","fontSize","fontFamily","join","h5","lineHeight","letterSpacing","mixins","drawer","minWidth","palette","primary","main","secondary","overrides","MuiButton","root","borderRadius","spacing","contained","color","getContrastText","grey","backgroundColor","useStyles","makeStyles","padding","button","width","label","display","justifyContent","textTransform","selected","fade","selectedOpacity","DrawerItem","text","icon","isSelected","onClick","classes","ListItem","className","Button","clsx","size","startIcon","height","flexShrink","paper","close","menuTitle","marginTop","marginLeft","fontWeight","fontWeightMedium","logoContainer","alignItems","paddingBottom","logo","pages","title","HomeOutlined","path","GrainRounded","SettingsOutlined","supportPages","InsertDriveFileOutlined","HelpOutlineOutlined","InfoOutlined","NavDrawer","history","useHistory","location","useLocation","useContext","isMobile","isOpenDrawer","setIsOpenDrawer","goToPage","page","push","Drawer","open","anchor","variant","onClose","alt","src","Typography","List","disablePadding","pathname","enqueueSnackbar","options","Date","getTime","Math","random","displayed","Notifier","dispatch","useDispatch","useSelector","useSnackbar","closeSnackbar","useEffect","forEach","message","includes","event","reason","myKey","onExited","removeSnackbar","flexDirection","marginBottom","menuButton","marginRight","flexGrow","titleByPath","Header","AppBar","position","elevation","IconButton","noWrap","gap","chart","alignSelf","maxWidth","legendText","subtitle2","body1","PredictionChart","colors","filesData","Object","values","probability","indexOf","max","undefined","reduce","result","name","value","emptyFilesData","length","DonutLargeRounded","align","ResponsiveContainer","aspect","PieChart","Pie","dataKey","data","cx","cy","innerRadius","outerRadius","cornerRadius","paddingAngle","labelLine","midAngle","RADIAN","PI","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","entry","index","Cell","Legend","iconType","formatter","content","CarouselCard","items","useState","currentIndex","setCurrentIndex","transitionIn","setTransitionIn","handleArrowClick","direction","newIndex","setTimeout","Card","Fade","in","timeout","CardActions","ArrowBack","ArrowForward","tableCell","borderBottom","emptyLog","EmptyLog","FormatListBulletedRounded","StyledTableCell","children","props","TableCell","PredictionLog","dateOptions","hour12","hour","minute","second","Table","TableHead","TableRow","TableBody","Avatar","fileName","fileUrl","component","scope","dateOfStartPrediction","toLocaleString","dateOfCompletePrediction","status","CircularProgress","thickness","Chip","toFixed","HomeCard","CarouselCardItem","CardContent","minHeight","backgroundImage","image","backgroundSize","backgroundPosition","backgroundRepeat","ActionCard","disableElevation","grid","chartCardContent","boxSizing","logCardContent","overflowX","statisticCardContent","paddingTop","HomePage","averagePredictionTime","timeDifference","Number","isNaN","array","Grid","container","item","md","xs","sm","input","Upload","onChange","accept","multiple","formEncType","htmlFor","margin","row","cell","paddingRight","StatisticsPopper","isOpen","anchorEl","onClickAway","ClickAwayListener","Popper","placement","transition","TransitionProps","disableStrictModeCompat","Paper","sort","a","b","i","Box","imageContainer","objectFit","ImageCard","CardActionArea","CardMedia","footer","textOverflow","whiteSpace","overflow","PredictionCard","popperAnchorEl","setPopperAnchorEl","Tooltip","interactive","clickable","currentTarget","Boolean","memo","axios","defaults","baseURL","process","predict","onUploadProgress","formData","FormData","append","method","url","headers","uploadFilesByStatus","getState","uploadFile","updateFile","fileObj","then","catch","error","addFiles","filesObj","addFile","nanoid","URL","createObjectURL","fileProps","HideOnScroll","window","trigger","useScrollTrigger","target","threshold","Slide","actions","fab","bottom","right","zIndex","appBar","fabIcon","noFilesAlert","alignContent","PredictionPage","handleAttachFiles","e","Array","from","Add","DeleteOutline","revokeObjectURL","style","textDecoration","filename","SaveAlt","lg","Fab","SettingsPage","mobilePadding","App","useMediaQuery","breakpoints","down","noSsr","store","ThemeProvider","responsiveFontSizes","anchorOrigin","vertical","horizontal","TransitionComponent","Grow","Provider","exact","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e99d5613.chunk.js","sourcesContent":["export const ADD_FILE = 'ADD_FILE'\n\nexport const DELETE_FILE = 'DELETE_FILE'\nexport const DELETE_ALL_FILE = 'DELETE_ALL_FILE'\nexport const UPDATE_FILE = 'UPDATE_FILE'\n\nexport const ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR'\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR'\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR'\n","import {\n    ADD_FILE,\n    DELETE_ALL_FILE,\n    DELETE_FILE,\n    UPDATE_FILE,\n} from '../actions/types'\n\nconst initialState = {\n    files: [],\n    labels: [\n        'Covid-19',\n        'Normal',\n        'Pneumonia',\n    ],\n}\n\nexport const xrays = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_FILE:\n            return {\n                ...state,\n                files: [\n                    action.payload,\n                    ...state.files\n                ]\n            }\n\n        case DELETE_FILE:\n            return {\n                ...state,\n                files: state.files.filter(file => file.id !== action.payload),\n            }\n\n        case DELETE_ALL_FILE:\n            return {\n                ...state,\n                files: []\n            }\n\n        case UPDATE_FILE:\n            return {\n                ...state,\n                files: state.files.map(\n                    file => file.id === action.payload.id ?\n                        { ...file, ...action.payload } : file,\n                ),\n            }\n\n        default:\n            return state\n    }\n}\n","import {\n    ENQUEUE_SNACKBAR,\n    REMOVE_SNACKBAR,\n    CLOSE_SNACKBAR,\n} from '../actions/types'\n\nconst initialState = {\n    notifications: [],\n}\n\nexport const notifications = (state = initialState, action) => {\n    switch (action.type) {\n        case ENQUEUE_SNACKBAR:\n            return {\n                ...state,\n                notifications: [\n                    ...state.notifications,\n                    {\n                        key: action.key,\n                        ...action.notification,\n                    },\n                ],\n            }\n\n        case CLOSE_SNACKBAR:\n            return {\n                ...state,\n                notifications: state.notifications.map(notification => (\n                    (action.dismissAll || notification.key === action.key)\n                        ? { ...notification, dismissed: true }\n                        : { ...notification }\n                )),\n            }\n\n        case REMOVE_SNACKBAR:\n            return {\n                ...state,\n                notifications: state.notifications.filter(\n                    notification => notification.key !== action.key,\n                ),\n            }\n\n        default:\n            return state\n    }\n}\n","import { xrays } from './xrays'\nimport { notifications } from './notifications'\n\nimport { combineReducers } from 'redux'\n\nexport default combineReducers({ xrays, notifications })\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\n\nexport default createStore(rootReducer, applyMiddleware(thunk))\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n// export default createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n","import React from 'react'\n\nconst UIContext = React.createContext()\n\nexport default UIContext\n","import { createMuiTheme } from '@material-ui/core'\n\nconst defaultTheme = createMuiTheme()\n\nexport const theme = createMuiTheme({\n    typography: {\n        fontSize: 15,\n        fontFamily: [\n            'Poppins',\n            'Helvetica',\n            'Arial',\n            'sans-serif',\n        ].join(','),\n        h5: {\n            lineHeight: 1.235,\n            letterSpacing: '0.00735em'\n        }\n    },\n    mixins: {\n        drawer: {\n            minWidth: 260\n        }\n    },\n    palette: {\n        primary: {\n            main: '#6200ea',\n        },\n        secondary: {\n            main: '#ff80ab'\n        }\n    },\n    overrides: {\n        MuiButton: {\n            root: {\n                borderRadius: defaultTheme.spacing(1),\n            },\n            contained: {\n                color: defaultTheme.palette.getContrastText(defaultTheme.palette.grey[200]),\n                backgroundColor: defaultTheme.palette.grey[200],\n            }\n        },\n    },\n})\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport { Button, fade, makeStyles } from '@material-ui/core'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(0, 0, 0.5, 0),\n    },\n    button: {\n        padding: theme.spacing(1),\n        width: '100%',\n    },\n    label: {\n        padding: theme.spacing(0, 1),\n        display: 'flex',\n        justifyContent: 'start',\n        textTransform: 'none',\n    },\n    selected: {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    },\n}))\n\nconst DrawerItem = ({ text, icon, isSelected, onClick }) => {\n    const classes = useStyles()\n\n    return (\n        <ListItem\n            className={classes.root}\n            onClick={onClick}\n        >\n            <Button\n                classes={{\n                    root: clsx(classes.button, isSelected && classes.selected),\n                    label: classes.label,\n                }}\n                size='large'\n                color={isSelected ? 'primary' : 'default'}\n                startIcon={icon}\n            >\n                {text}\n            </Button>\n        </ListItem>\n    )\n}\n\nexport default DrawerItem\n","import React, { useContext } from 'react'\nimport { makeStyles, Typography } from '@material-ui/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport UIContext from '../../context'\nimport Drawer from '@material-ui/core/Drawer'\nimport clsx from 'clsx'\nimport List from '@material-ui/core/List'\nimport DrawerItem from './DrawerItem'\nimport {\n    GrainRounded, HelpOutlineOutlined, HomeOutlined,\n    InfoOutlined, InsertDriveFileOutlined,\n    SettingsOutlined\n} from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: theme.mixins.drawer.minWidth,\n        padding: theme.spacing(2, 2, 2, 2),\n        height: '100%',\n        flexShrink: 0,\n    },\n    paper: {\n        padding: theme.spacing(2, 2, 2, 2),\n        width: theme.mixins.drawer.minWidth,\n    },\n    close: {\n        width: 0,\n    },\n    menuTitle: {\n        marginTop: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n        fontWeight: theme.typography.fontWeightMedium\n    },\n    logoContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(1)\n    },\n    logo: {\n        padding: theme.spacing(1),\n        height: 50,\n        width: 50\n    }\n}))\n\nconst pages = [\n    {\n        title: 'Home',\n        icon: <HomeOutlined />,\n        path: '/',\n    },\n    {\n        title: 'Disease prediction',\n        icon: <GrainRounded />,\n        path: '/prediction'\n    },\n    {\n        title: 'Settings',\n        icon: <SettingsOutlined />,\n        path: '/settings'\n    }\n]\n\nconst supportPages = [\n    {\n        title: 'Docs',\n        icon: <InsertDriveFileOutlined />,\n        path: '/docs',\n    },\n    {\n        title: 'Help',\n        icon: <HelpOutlineOutlined />,\n        path: '/help',\n    },\n    {\n        title: 'About',\n        icon: <InfoOutlined />,\n        path: '/about',\n    }\n]\n\nconst NavDrawer = () => {\n    const classes = useStyles()\n    const history = useHistory()\n    const location = useLocation()\n\n    const { isMobile, isOpenDrawer, setIsOpenDrawer } = useContext(UIContext)\n\n    const goToPage = (page) => {\n        history.push(`${page.path}`)\n\n        if (isMobile) {\n            setIsOpenDrawer(false)\n        }\n    }\n\n    return (\n        <Drawer\n            classes={{\n                root: clsx(classes.root, !isOpenDrawer && classes.close),\n                paper: classes.paper,\n            }}\n            open={isOpenDrawer}\n            anchor='left'\n            variant={isMobile ? 'temporary' : 'persistent'}\n            onClose={() => setIsOpenDrawer(false)}\n        >\n            <div className={classes.logoContainer}>\n                <img className={classes.logo} alt='logo' src='logo.png' />\n                <Typography variant='h6'>\n                    lungs diseases\n                </Typography>\n            </div>\n\n            <Typography className={classes.menuTitle} color='textSecondary' variant='overline'>\n                MENU\n            </Typography>\n\n            <List disablePadding>\n                {pages.map(page =>\n                    <DrawerItem\n                        key={page.path}\n                        text={page.title}\n                        icon={page.icon}\n                        onClick={() => goToPage(page)}\n                        isSelected={page.path === location.pathname}\n                    />\n                )}\n            </List>\n\n            <Typography className={classes.menuTitle} color='textSecondary' variant='overline'>\n                SUPPORT\n            </Typography>\n\n            <List disablePadding>\n                {supportPages.map(page =>\n                    <DrawerItem\n                        key={page.path}\n                        text={page.title}\n                        icon={page.icon}\n                        onClick={() => goToPage(page)}\n                        isSelected={page.path === location.pathname}\n                    />\n                )}\n            </List>\n        </Drawer>\n    )\n}\n\nexport default NavDrawer\n","import { ENQUEUE_SNACKBAR, CLOSE_SNACKBAR, REMOVE_SNACKBAR } from './types'\n\nexport const enqueueSnackbar = (notification) => {\n    const key = notification.options && notification.options.key\n\n    return {\n        type: ENQUEUE_SNACKBAR,\n        notification: {\n            ...notification,\n            key: key || new Date().getTime() + Math.random(),\n        }\n    }\n}\n\nexport const closeSnackbar = key => ({\n    type: CLOSE_SNACKBAR,\n    dismissAll: !key,\n    key,\n})\n\nexport const removeSnackbar = key => ({\n    type: REMOVE_SNACKBAR,\n    key,\n})\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useSnackbar } from 'notistack'\nimport { removeSnackbar } from '../../actions/notifications'\n\nlet displayed = []\n\nconst Notifier = () => {\n    const dispatch = useDispatch()\n    const notifications = useSelector(state => state.notifications.notifications)\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n\n    const storeDisplayed = (id) => {\n        displayed = [...displayed, id]\n    }\n\n    const removeDisplayed = (id) => {\n        displayed = [...displayed.filter(key => id !== key)]\n    }\n\n    useEffect(() => {\n        notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\n            if (dismissed) {\n                closeSnackbar(key)\n                return\n            }\n\n            if (displayed.includes(key)) return\n\n            enqueueSnackbar(message, {\n                key,\n                ...options,\n                onClose: (event, reason, myKey) => {\n                    if (options.onClose) {\n                        options.onClose(event, reason, myKey)\n                    }\n                },\n                onExited: (event, myKey) => {\n                    dispatch(removeSnackbar(myKey))\n                    removeDisplayed(myKey)\n                },\n            })\n\n            storeDisplayed(key)\n        })\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch])\n\n    return null\n}\n\nexport default Notifier\n","import React, { useContext } from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport AppBar from '@material-ui/core/AppBar'\nimport { Typography } from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport UIContext from '../../context'\nimport { useLocation } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: theme.spacing(4, 0),\n        marginBottom: theme.spacing(2)\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        borderRadius: theme.spacing(1),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}))\n\nconst titleByPath = {\n    '/': 'Overview',\n    '/prediction': 'Disease prediction',\n    '/settings': 'Settings'\n}\n\nconst Header = () => {\n    const classes = useStyles()\n    const location = useLocation()\n\n    const { isMobile, isOpenDrawer, setIsOpenDrawer } = useContext(UIContext)\n\n    return (\n        <AppBar\n            className={classes.root}\n            position='relative'\n            elevation={0}\n            color='transparent'\n        >\n            {isMobile &&\n                <IconButton\n                    className={classes.menuButton}\n                    onClick={() => setIsOpenDrawer(!isOpenDrawer)}\n                    color='inherit'\n                >\n                    <MenuIcon />\n                </IconButton>\n            }\n            <Typography\n                className={classes.title}\n                variant={isMobile ? 'h5' : 'h4'}\n                noWrap\n            >\n                {titleByPath[location.pathname]}\n            </Typography>\n        </AppBar>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { makeStyles, Typography } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { Cell, Legend, Pie, PieChart, ResponsiveContainer } from 'recharts'\nimport { grey } from '@material-ui/core/colors'\nimport { DonutLargeRounded } from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: theme.spacing(2),\n        height: '100%',\n        width: '100%',\n    },\n    chart: {\n        display: 'flex',\n        alignSelf: 'center',\n        maxWidth: 300,\n    },\n    legendText: {\n        fontFamily: theme.typography.subtitle2.fontFamily,\n        fontSize: theme.typography.subtitle2.fontSize,\n        fontWeight: theme.typography.subtitle2.fontWeight,\n        color: theme.palette.text.primary,\n    },\n    label: {\n        fontFamily: theme.typography.body1.fontFamily,\n        fontSize: theme.typography.body1.fontSize,\n        fontWeight: theme.typography.body1.fontWeight,\n    },\n}))\n\nconst PredictionChart = () => {\n    const classes = useStyles()\n\n    const colors = ['#B140CB', '#D860BB', '#FF80AB']\n\n    const transformFilesData = (files, labels) => {\n        return Object.values(\n            files.map((file) =>\n                labels[file.probability.indexOf(Math.max(...file.probability))],\n            ).filter((label) =>\n                label !== undefined,\n            ).reduce((result, label) => {\n                result[label] = result[label] || { name: label, value: 0 }\n                result[label].value++\n\n                return result\n            }, {})\n        )\n    }\n\n    const filesData = useSelector(state => transformFilesData(state.xrays.files, state.xrays.labels))\n\n    const emptyFilesData = [{ name: '', value: 1 }]\n\n    const legendText = (value, entry) => {\n        return <span className={classes.legendText}>{value}</span>\n    }\n\n    const label = ({ cx, cy, midAngle, innerRadius, outerRadius, value }) => {\n        const RADIAN = Math.PI / 180\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5\n        const x = cx + radius * Math.cos(-midAngle * RADIAN)\n        const y = cy + radius * Math.sin(-midAngle * RADIAN)\n\n        return (\n            <text className={classes.label} x={x} y={y} fill='white' textAnchor='middle' dominantBaseline='central'>\n                {value}\n            </text>\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            {filesData.length === 0 &&\n                <>\n                    <DonutLargeRounded />\n                    <Typography align='center'>\n                        Upload X-Ray to get prediction statistics\n                    </Typography>\n                </>\n            }\n            {filesData.length !== 0 &&\n                <ResponsiveContainer className={classes.chart} width='100%' aspect={1}>\n                    <PieChart>\n                        <Pie\n                            dataKey='value'\n                            data={filesData.length !== 0 ? filesData : emptyFilesData}\n                            cx='50%'\n                            cy='50%'\n                            innerRadius='68%'\n                            outerRadius='90%'\n                            cornerRadius={5}\n                            paddingAngle={3}\n                            labelLine={false}\n                            label={filesData.length !== 0 && label}\n                        >\n                            {filesData.length !== 0 ?\n                                filesData.map((entry, index) => (\n                                    <Cell\n                                        key={`cell-${index}`}\n                                        fill={colors[index % colors.length]}\n                                    />))\n                                :\n                                emptyFilesData.map((entry, index) => (\n                                    <Cell\n                                        key={`cell-${index}`}\n                                        fill={grey[300]}\n                                    />))\n                            }\n                        </Pie>\n                        {filesData.length !== 0 &&\n                            <Legend\n                                align='center'\n                                iconType='circle'\n                                formatter={legendText}\n                            />\n                        }\n                    </PieChart>\n                </ResponsiveContainer>\n            }\n        </div>\n    )\n}\n\nexport default PredictionChart\n","import { makeStyles } from '@material-ui/styles'\nimport { Fade, IconButton } from '@material-ui/core'\nimport CardActions from '@material-ui/core/CardActions'\nimport { ArrowBack, ArrowForward } from '@material-ui/icons'\nimport Card from '@material-ui/core/Card'\nimport React, { useState } from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: theme.spacing(2),\n        height: '100%',\n        width: '100%',\n    },\n    content: {\n        height: '100%',\n        width: '100%'\n    }\n}))\n\nconst CarouselCard = ({ items }) => {\n    const classes = useStyles()\n    const [currentIndex, setCurrentIndex] = useState(0)\n    const [transitionIn, setTransitionIn] = useState(true)\n\n    const handleArrowClick = (direction) => {\n        const increment = direction === 'left' ? -1 : 1\n        const newIndex = (currentIndex + increment + items.length) % items.length\n\n        setTransitionIn(false)\n\n        setTimeout(() => {\n            setCurrentIndex(newIndex)\n            setTransitionIn(true)\n        }, 200)\n    }\n\n    return (\n        <Card className={classes.root} variant='outlined'>\n            <Fade in={transitionIn} timeout={200}>\n                <div className={classes.content}>\n                    {items.length !== 0 && items[currentIndex]}\n                </div>\n            </Fade>\n            <CardActions>\n                <IconButton onClick={() => handleArrowClick('left')}>\n                    <ArrowBack />\n                </IconButton>\n                <IconButton onClick={() => handleArrowClick('right')}>\n                    <ArrowForward />\n                </IconButton>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default CarouselCard\n","import { makeStyles } from '@material-ui/styles'\nimport { useSelector } from 'react-redux'\nimport { Typography, Avatar, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport React from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport { FormatListBulletedRounded } from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100%',\n    },\n    tableCell: {\n        borderBottom: 'none',\n    },\n    emptyLog: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: theme.spacing(2),\n    },\n\n}))\n\nconst EmptyLog = () => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.emptyLog}>\n            <FormatListBulletedRounded />\n            <Typography align='center'>\n                Upload X-Ray to get prediction log\n            </Typography>\n        </div>\n    )\n}\n\nconst StyledTableCell = ({ children, ...props }) => {\n    const classes = useStyles()\n\n    return (\n        <TableCell className={classes.tableCell} {...props}>{children}</TableCell>\n    )\n}\n\nconst PredictionLog = () => {\n    const classes = useStyles()\n\n    const labels = useSelector(state => state.xrays.labels)\n    const files = useSelector(state => state.xrays.files)\n\n    const dateOptions = {\n        hour12: false,\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n    }\n\n    return (\n        <div className={classes.root}>\n            {files.length === 0 && <EmptyLog />}\n            {files.length !== 0 &&\n                <Table size='small'>\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell>Image</StyledTableCell>\n                            <StyledTableCell align='left'>File name</StyledTableCell>\n                            <StyledTableCell align='left'>Start prediction date</StyledTableCell>\n                            <StyledTableCell align='left'>Complete prediction date</StyledTableCell>\n                            <StyledTableCell align='left'>Prediction result</StyledTableCell>\n                            <StyledTableCell align='left'>Probability</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {files.map((file) => (\n                            <TableRow key={file.id}>\n                                <StyledTableCell>\n                                    <Avatar alt={file.fileName} src={file.fileUrl} />\n                                </StyledTableCell>\n\n                                <StyledTableCell align='left' component='th' scope='row'>\n                                    {file.fileName}\n                                </StyledTableCell>\n\n                                <StyledTableCell align='left'>\n                                    {file.dateOfStartPrediction &&\n                                        file.dateOfStartPrediction.toLocaleString('en-US', dateOptions)\n                                    }\n                                </StyledTableCell>\n\n                                <StyledTableCell align='left'>\n                                    {file.dateOfCompletePrediction &&\n                                        file.dateOfCompletePrediction.toLocaleString('en-US', dateOptions)\n                                    }\n                                    {file.status === 'loading' &&\n                                        <CircularProgress color='secondary' size={28} thickness={4.0} />\n                                    }\n                                </StyledTableCell>\n\n                                <StyledTableCell align='left'>\n                                    {file.status === 'succeeded' &&\n                                        <div>\n                                            {labels[file.probability.indexOf(Math.max(...file.probability))]}\n                                        </div>\n                                    }\n                                    {file.status === 'loading' &&\n                                        <CircularProgress color='secondary' size={28} thickness={4.0} />\n                                    }\n                                </StyledTableCell>\n\n                                <StyledTableCell align='left'>\n                                    {file.status === 'succeeded' &&\n                                        <Chip\n                                            color='secondary'\n                                            size='small'\n                                            variant='outlined'\n                                            label={`${(Math.max(...file.probability) * 100).toFixed(1)}%`}\n                                        />\n                                    }\n                                    {file.status === 'loading' &&\n                                        <CircularProgress color='secondary' size={28} thickness={4.0} />\n                                    }\n                                </StyledTableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            }\n        </div>\n    )\n}\n\nexport default PredictionLog","import { makeStyles } from '@material-ui/styles'\nimport Card from '@material-ui/core/Card'\nimport { Typography } from '@material-ui/core'\nimport React from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: theme.spacing(2),\n        height: '100%',\n        width: '100%',\n    },\n    title: {\n        padding: theme.spacing(2),\n    },\n}))\n\n\nconst HomeCard = ({ title, children }) => {\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.root} variant='outlined'>\n            <Typography variant='h6' className={classes.title}>\n                {title}\n            </Typography>\n            {children}\n        </Card>\n    )\n}\n\nexport default HomeCard\n\n","import { makeStyles } from '@material-ui/styles'\nimport { CardContent, Typography } from '@material-ui/core'\nimport React from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    title: {\n        padding: theme.spacing(2),\n    }\n}))\n\nconst CarouselCardItem = ({ title, children }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h6' className={classes.title}>\n                {title}\n            </Typography>\n            <CardContent>\n                {children}\n            </CardContent>\n        </div>\n    )\n}\n\nexport default CarouselCardItem\n","import { makeStyles } from '@material-ui/styles'\nimport { Button, Card, CardContent } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%',\n        width: '100%',\n        minHeight: theme.spacing(18),\n        display: 'flex',\n        alignItems: 'flex-end',\n        borderRadius: theme.spacing(2),\n        backgroundImage: props => `url(${props.image})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n    },\n    content: {\n        padding: theme.spacing(3)\n    }\n}))\n\nconst ActionCard = ({ title, image, icon, onClick }) => {\n    const classes = useStyles({ image })\n\n    return (\n        <Card variant='outlined' className={classes.root}>\n            <CardContent className={classes.content}>\n                <Button\n                    size='large'\n                    variant='contained'\n                    disableElevation\n                    color='primary'\n                    startIcon={icon}\n                    onClick={onClick}\n                >\n                    {title}\n                </Button>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default ActionCard\n","import React from 'react'\nimport { CardContent, makeStyles, Typography } from '@material-ui/core'\nimport PredictionChart from '../PredictionChart'\nimport Grid from '@material-ui/core/Grid'\nimport CarouselCard from '../CarouselCard'\nimport PredictionLog from '../PredictionLog'\nimport { useSelector } from 'react-redux'\nimport HomeCard from '../HomeCard'\nimport CarouselCardItem from '../CarouselCard/CarouselCardItem'\nimport ActionCard from '../ActionCard'\nimport { useHistory } from 'react-router-dom'\nimport { GrainRounded } from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: '100%',\n    },\n    grid: {\n        padding: theme.spacing(1)\n    },\n    chartCardContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n        width: '100%',\n        boxSizing: 'border-box',\n    },\n    logCardContent: {\n        overflowX: 'auto',\n    },\n    statisticCardContent: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        paddingTop: 0,\n        '& > :not(:last-child)': {\n            marginRight: theme.spacing(1),\n        },\n    },\n}))\n\nconst HomePage = () => {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const files = useSelector(state => state.xrays.files)\n    const averagePredictionTime = useSelector(state => state.xrays.files\n        .map(file => file.dateOfCompletePrediction - file.dateOfStartPrediction)\n        .filter(timeDifference => !Number.isNaN(timeDifference))\n        .reduce((result, timeDifference, index, array) => {\n            result += timeDifference\n\n            if (index === array.length - 1) {\n                result /= array.length\n            }\n\n            return result\n        }, 0)\n    )\n\n    const goToPage = (path) => {\n        history.push(`${path}`)\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.grid}>\n                <Grid container spacing={2} alignItems='stretch'>\n                    <Grid item alignItems='stretch' container spacing={2} md={3}>\n                        <Grid item xs={12} sm={4} md={12}>\n                            <ActionCard\n                                title='Predict'\n                                image='images/xray.jpeg'\n                                icon={<GrainRounded />}\n                                onClick={() => goToPage('/prediction')}\n                            />\n                        </Grid>\n\n                        <Grid item xs={6} sm={4} md={12}>\n                            <HomeCard title='Total X-Ray'>\n                                <CardContent className={classes.statisticCardContent}>\n                                    <Typography color='secondary' variant='h5'>\n                                        {files.length}\n                                    </Typography>\n                                    <Typography color='secondary'>\n                                        images\n                                    </Typography>\n                                </CardContent>\n                            </HomeCard>\n                        </Grid>\n                        <Grid item xs={6} sm={4} md={12}>\n                            <HomeCard title='Average prediction time'>\n                                <CardContent className={classes.statisticCardContent}>\n                                    <Typography color='secondary' variant='h5'>\n                                        {(averagePredictionTime / (1000 * 60)).toFixed(2)}\n                                    </Typography>\n                                    <Typography color='secondary'>\n                                        minutes\n                                    </Typography>\n                                </CardContent>\n                            </HomeCard>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md>\n                        <HomeCard title='Prediction statistics'>\n                            <CardContent className={classes.chartCardContent}>\n                                <PredictionChart />\n                            </CardContent>\n                        </HomeCard>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} md>\n                        <CarouselCard items={[\n                            <CarouselCardItem title='Covid-19'>\n                                <Typography>\n                                    Coronavirus disease (COVID-19) is an infectious disease caused by a newly discovered\n                                    coronavirus.\n                                    <br />\n                                    <br />\n                                    Most people infected with the COVID-19 virus will experience mild to moderate\n                                    respiratory\n                                    illness and recover without requiring special treatment. Older people, and those\n                                    with\n                                    underlying medical problems like cardiovascular disease, diabetes, chronic\n                                    respiratory\n                                    disease, and cancer are more likely to develop serious illness.\n                                </Typography>\n                            </CarouselCardItem>,\n                            <CarouselCardItem title='Pneumonia'>\n                                <Typography>\n                                    Pneumonia is an inflammatory condition of the lung primarily affecting the small air\n                                    sacs known as alveoli.\n                                    Symptoms typically include some combination of productive or dry cough, chest pain,\n                                    fever and difficulty\n                                    breathing. The severity of the condition is variable.\n                                    <br />\n                                    <br />\n                                    Pneumonia is usually caused by infection with viruses or bacteria, and less commonly\n                                    by other microorganisms. Identifying the responsible pathogen can be difficult.\n                                    Diagnosis is often based on symptoms and physical examination. Chest X-rays,\n                                    blood tests, and culture of the sputum may help confirm the diagnosis. The disease\n                                    may be classified by where it was acquired, such as community- or hospital-acquired\n                                    or healthcare-associated pneumonia.\n                                </Typography>\n                            </CarouselCardItem>\n                        ]} />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <HomeCard title='Prediction log'>\n                            <CardContent className={classes.logCardContent}>\n                                <PredictionLog />\n                            </CardContent>\n                        </HomeCard>\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport default HomePage\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    },\n    input: {\n        display: 'none'\n    },\n}))\n\nconst Upload = ({ onChange, children }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <input\n                accept='image/*'\n                className={classes.input}\n                id='contained-button-file'\n                multiple\n                type='file'\n                formEncType='multipart/form-data'\n                onChange={onChange}\n            />\n            <label htmlFor='contained-button-file'>\n                {children}\n            </label>\n        </div>\n    )\n}\n\nexport default Upload\n","import React from 'react'\nimport { makeStyles, Typography } from '@material-ui/core'\nimport Popper from '@material-ui/core/Popper'\nimport Fade from '@material-ui/core/Fade'\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(2),\n    },\n    row: {},\n    cell: {\n        paddingRight: theme.spacing(2),\n    },\n}))\n\nconst StatisticsPopper = ({ isOpen, anchorEl, onClickAway, data }) => {\n    const classes = useStyles()\n\n    return (\n        <ClickAwayListener onClickAway={onClickAway}>\n            <Popper\n                className={classes.root}\n                open={isOpen}\n                anchorEl={anchorEl}\n                placement='top'\n                transition\n            >\n                {({ TransitionProps }) => (\n                    <Fade {...TransitionProps} disableStrictModeCompat>\n                        <Paper className={classes.paper}>\n                            <table>\n                                <tbody>\n                                    {data.sort((a, b) => b.value - a.value).map(({ label, value }, i) => (\n                                        <tr className={classes.row} key={label}>\n                                            <td align='left' className={classes.cell}>\n                                                <Typography>\n                                                    {label}\n                                                </Typography>\n                                            </td>\n                                            <td align='left'>\n                                                <Box fontWeight='fontWeightMedium' fontFamily='fontFamily'>\n                                                    {`${(value * 100).toFixed(1)}%`}\n                                                </Box>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </Paper>\n                    </Fade>\n                )}\n            </Popper>\n        </ClickAwayListener>\n    )\n}\n\nexport default StatisticsPopper\n","import { CardActionArea, CardMedia, makeStyles } from '@material-ui/core'\nimport Card from '@material-ui/core/Card'\nimport React from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        marginBottom: theme.spacing(1),\n        borderRadius: theme.spacing(2),\n    },\n    imageContainer: {\n        display: 'block',\n        paddingBottom: '100%'\n    },\n    image: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n    }\n}))\n\nconst ImageCard = ({ fileUrl }) => {\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.root} elevation={0}>\n            <CardActionArea>\n                <div className={classes.imageContainer}>\n                    <CardMedia\n                        className={classes.image}\n                        component='img'\n                        src={fileUrl}\n                    />\n                </div>\n            </CardActionArea>\n        </Card>\n    )\n}\n\nexport default ImageCard\n","import React, { memo, useState } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport Box from '@material-ui/core/Box'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport StatisticsPopper from './StatisticsPopper'\nimport ImageCard from './ImageCard'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n    },\n    footer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    title: {\n        marginRight: theme.spacing(1),\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n}))\n\nconst PredictionCard = ({ file }) => {\n    const classes = useStyles()\n    const labels = useSelector(state => state.xrays.labels)\n    const [popperAnchorEl, setPopperAnchorEl] = useState(null)\n\n    const handleClickChip = (event) => {\n        setPopperAnchorEl(popperAnchorEl ? null : event.currentTarget)\n    }\n\n    const handleClickAwayPopper = () => {\n        setPopperAnchorEl(null)\n    }\n\n    return (\n        <div className={classes.root}>\n            <ImageCard fileUrl={file.fileUrl} />\n\n            <div className={classes.footer}>\n                <Tooltip interactive placement='top' title={file.fileName}>\n                    <Box\n                        className={classes.title}\n                        fontWeight='fontWeightMedium'\n                        fontFamily='fontFamily'\n                    >\n                        {file.fileName}\n                    </Box>\n                </Tooltip>\n                <div>\n                    {file.status === 'loading' && <CircularProgress color='secondary' size={28} thickness={4.0} />}\n                    {file.status === 'succeeded' &&\n                        <Chip\n                            color='secondary'\n                            variant='outlined'\n                            clickable\n                            onClick={handleClickChip}\n                            label={labels[file.probability.indexOf(Math.max(...file.probability))]}\n                        />\n                    }\n                </div>\n            </div>\n            {Boolean(popperAnchorEl) &&\n                <StatisticsPopper\n                    isOpen={Boolean(popperAnchorEl)}\n                    anchorEl={popperAnchorEl}\n                    onClickAway={handleClickAwayPopper}\n                    data={file.probability.map((probability, i) => ({\n                        label: labels[i],\n                        value: probability,\n                    }))}\n                />\n            }\n        </div>\n    )\n}\n\nexport default memo(PredictionCard)\n","import axios from 'axios'\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_BASE_URL\n\nexport const predict = (file, onUploadProgress) => {\n    const formData = new FormData()\n    formData.append('file', file)\n\n    return axios({\n        method: 'post',\n        url: '/predict',\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        },\n        data: formData,\n        onUploadProgress: onUploadProgress,\n    })\n}","import { UPDATE_FILE, DELETE_FILE, DELETE_ALL_FILE, ADD_FILE } from './types'\nimport { nanoid } from 'nanoid'\nimport { enqueueSnackbar } from './notifications'\nimport { predict } from '../api'\n\nexport const uploadFilesByStatus = (status) => async (dispatch, getState) => {\n    const files = getState().xrays.files.filter(file => file.status === status)\n\n    await files.forEach(file => {\n        dispatch(uploadFile(file))\n    })\n}\n\nexport const uploadFile = (file) => async (dispatch) => {\n    dispatch(updateFile({\n        id: file.id,\n        status: 'loading',\n        dateOfStartPrediction: new Date(),\n    }))\n\n    predict(file.fileObj).then(result => {\n        if (result.data) {\n            dispatch(updateFile({\n                id: file.id,\n                status: 'succeeded',\n                probability: result.data.probability,\n                dateOfCompletePrediction: new Date(),\n            }))\n        } else {\n            dispatch(updateFile({\n                id: file.id,\n                status: 'failed',\n                dateOfCompletePrediction: new Date()\n            }))\n\n            dispatch(enqueueSnackbar({ message: 'Upload file error' }))\n        }\n    }).catch(error => {\n        dispatch(updateFile({\n            id: file.id,\n            status: 'failed',\n            dateOfCompletePrediction: new Date()\n        }))\n\n        dispatch(enqueueSnackbar({ message: 'Upload file error' }))\n    })\n}\n\nexport const addFiles = (filesObj) => async (dispatch) => {\n    await filesObj.forEach((fileObj) => dispatch(addFile(fileObj)))\n}\n\nexport const addFile = (fileObj) => (dispatch) => {\n    const file = {\n        id: nanoid(),\n        fileUrl: URL.createObjectURL(fileObj),\n        fileName: fileObj.name,\n        fileObj: fileObj,\n        dateOfStartPrediction: undefined,\n        dateOfCompletePrediction: undefined,\n        status: 'idle',\n        probability: [],\n    }\n\n    dispatch({\n        type: ADD_FILE,\n        payload: file,\n    })\n}\n\nexport const updateFile = (fileProps) => ({\n    type: UPDATE_FILE,\n    payload: fileProps,\n})\n\nexport const deleteFile = (id) => ({\n    type: DELETE_FILE,\n    payload: id,\n})\n\nexport const deleteAllFiles = () => (dispatch, getState) => {\n    getState().xrays.files.forEach((file) => URL.revokeObjectURL(file.fileUrl))\n\n    dispatch({\n        type: DELETE_ALL_FILE,\n    })\n}\n","import React from 'react'\nimport { useScrollTrigger } from '@material-ui/core'\nimport Slide from '@material-ui/core/Slide'\n\nconst HideOnScroll = ({ children, window }) => {\n    const trigger = useScrollTrigger({\n        target: window ? window() : undefined,\n        threshold: 0,\n    })\n\n    return (\n        <Slide in={!trigger} direction='up' disableStrictModeCompat>\n            {children}\n        </Slide>\n    )\n}\n\nexport default HideOnScroll\n","import React, { useContext } from 'react'\nimport { Button, makeStyles, Typography } from '@material-ui/core'\nimport Upload from '../Upload'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport PredictionCard from '../PredictionCard'\nimport UIContext from '../../context'\nimport {\n    addFiles,\n    deleteAllFiles,\n    uploadFilesByStatus,\n} from '../../actions/xrays'\nimport { Add, DeleteOutline, SaveAlt } from '@material-ui/icons'\nimport { CSVLink } from 'react-csv'\nimport Fab from '@material-ui/core/Fab'\nimport HideOnScroll from '../HideOnScroll'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    actions: {\n        display: 'flex',\n        marginBottom: theme.spacing(4),\n        '& > :not(:last-child)': {\n            marginRight: theme.spacing(2),\n        },\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: theme.zIndex.appBar,\n    },\n    fabIcon: {\n        marginRight: theme.spacing(1),\n    },\n    noFilesAlert: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        alignContent: 'center',\n        flexGrow: 1,\n        marginTop: theme.spacing(4),\n    },\n    marginBottom: {\n        marginBottom: theme.spacing(3),\n    },\n}))\n\nconst PredictionPage = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const files = useSelector(state => state.xrays.files)\n    const { isMobile } = useContext(UIContext)\n\n    const handleDeleteAll = () => {\n        dispatch(deleteAllFiles())\n    }\n\n    const handleAttachFiles = async (e) => {\n        if (e.target.files) {\n            const filesObj = Array.from(e.target.files)\n\n            await dispatch(addFiles(filesObj))\n            await dispatch(uploadFilesByStatus('idle'))\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            {files.length === 0 ?\n                <div className={classes.noFilesAlert}>\n                    <Typography variant='h6' className={classes.marginBottom}>\n                        Upload x-ray to get started\n                    </Typography>\n\n                    <Typography align='center' className={classes.marginBottom}>\n                        Start uploading chest X-rays and getting\n                        predictions. <br />\n                        Files you upload will show up here.\n                    </Typography>\n                    <Upload\n                        onChange={handleAttachFiles}\n                        children={\n                            <Button\n                                size='large'\n                                startIcon={<Add />}\n                                variant='contained'\n                                disableElevation\n                                color='primary'\n                                component='span'\n                            >\n                                Upload\n                            </Button>\n                        }\n                    />\n                </div>\n                :\n                <div>\n                    <div className={classes.actions}>\n                        {!isMobile &&\n                            <Upload\n                                onChange={handleAttachFiles}\n                                children={\n                                    <Button\n                                        startIcon={<Add />}\n                                        variant='contained'\n                                        disableElevation\n                                        color='primary'\n                                        component='span'\n                                    >\n                                        Upload\n                                    </Button>\n                                }\n                            />\n                        }\n                        <Button\n                            startIcon={<DeleteOutline />}\n                            disableElevation\n                            variant='contained'\n                            onClick={handleDeleteAll}\n                        >\n                            Delete all\n                        </Button>\n                        <CSVLink\n                            style={{ textDecoration: 'none', color: 'inherit' }}\n                            data={files.map((file) => ({\n                                fileName: file.fileName,\n                                ...file.probability,\n                            }))}\n                            filename={'predictions.csv'}\n                        >\n                            <Button\n                                startIcon={<SaveAlt />}\n                                variant='contained'\n                                disableElevation\n                            >\n                                Export to CSV\n                            </Button>\n                        </CSVLink>\n                    </div>\n                    <Grid container spacing={4}>\n                        {files.map(file =>\n                            <Grid\n                                direction='column'\n                                container\n                                key={file.id}\n                                item\n                                xs={12} sm={6} md={4} lg={3}\n                            >\n                                <PredictionCard file={file} />\n                            </Grid>\n                        )}\n                    </Grid>\n                </div>\n            }\n            {isMobile && files.length !== 0 &&\n                <Upload\n                    onChange={handleAttachFiles}\n                    children={\n                        <HideOnScroll>\n                            <Fab\n                                variant='extended'\n                                color='primary'\n                                component='span'\n                                className={classes.fab}\n                            >\n                                <Add className={classes.fabIcon} />\n                                Upload\n                            </Fab>\n                        </HideOnScroll>\n                    }\n                />\n            }\n        </div>\n    )\n}\n\nexport default PredictionPage\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}))\n\nconst SettingsPage = () => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n\n        </div>\n    )\n}\n\nexport default SettingsPage\n","import React, { useEffect, useState } from 'react'\nimport { Provider } from 'react-redux'\nimport store from '../../store'\nimport UIContext from '../../context'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { makeStyles, responsiveFontSizes } from '@material-ui/core/styles'\nimport { theme } from '../../theme'\nimport { Switch, Redirect, Route, HashRouter } from 'react-router-dom'\nimport { Grow, useMediaQuery } from '@material-ui/core'\nimport NavDrawer from '../NavDrawer'\nimport { SnackbarProvider } from 'notistack'\nimport Notifier from '../Notifier'\nimport Header from '../Header'\nimport clsx from 'clsx'\nimport HomePage from '../Pages/HomePage'\nimport PredictionPage from '../Pages/PredictionPage'\nimport SettingsPage from '../Pages/SettingsPage'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    page: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        boxSizing: 'border-box',\n        padding: theme.spacing(2),\n    },\n    mobilePadding: {\n        padding: theme.spacing(0, 1),\n    },\n}))\n\nconst App = () => {\n    const classes = useStyles()\n\n    const isMobile = useMediaQuery(theme.breakpoints.down('md'), {\n        noSsr: true,\n    })\n\n    const [isOpenDrawer, setIsOpenDrawer] = useState(() => !isMobile)\n\n    useEffect(() => {\n        if (!isMobile) {\n            setIsOpenDrawer(true)\n        }\n    }, [isMobile])\n\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={responsiveFontSizes(theme)}>\n                <SnackbarProvider\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    TransitionComponent={Grow}\n                >\n                    <UIContext.Provider value={{ isOpenDrawer, setIsOpenDrawer, isMobile }}>\n                        <HashRouter>\n                            <div className={classes.root}>\n                                <NavDrawer />\n                                <Notifier />\n\n                                <div className={clsx(classes.page, isMobile && classes.mobilePadding)}>\n                                    <Header />\n                                    <Switch>\n                                        <Route path={'/'} exact component={HomePage} />\n                                        <Route path={'/prediction'} exact component={PredictionPage} />\n                                        <Route path={'/settings'} exact component={SettingsPage} />\n                                        <Redirect from={'/*'} to={'/'} />\n                                    </Switch>\n                                </div>\n                            </div>\n                        </HashRouter>\n                    </UIContext.Provider>\n                </SnackbarProvider>\n            </ThemeProvider>\n        </Provider>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)\n\nreportWebVitals()\n"],"sourceRoot":""}